-- Trigger is a block of sql code that we write
-- which can define a certain action that should happen
-- when a certain operation gets performed on the database
-- YOU CAN CREATE A TRIGGER BEFORE/AFTER --> INSERT/UPDATE/DELETE
CREATE TABLE trigger_test (
    message VARCHAR(100)
);

-- Go into Command Line Client for SQL
-- TYPE: use whateverDataBaseName

-- First Step: 
DELIMITER $$
-- Second Step:
-- Adds a string message into my_trigger TABLE whenever
-- an employee is added into the employee TABLE
CREATE  
    TRIGGER my_trigger BEFORE INSERT
    ON employee
    FOR EACH ROW BEGIN
        INSERT INTO trigger_test VALUES('added new employee');
    END$$
-- Third Step
DELIMITER;

-- Test insert employee into employee TABLE
INSERT INTO employee
VALUES(109, 'Oscar', 'Martinez', '1968-02-19', 'M', 69000, 106, 3);

-- Trigger #2 named my_trigger1
DELIMITER $$
CREATE  
    TRIGGER my_trigger1 BEFORE INSERT
    ON employee
    FOR EACH ROW BEGIN
        INSERT INTO trigger_test VALUES(NEW.first_name);
    END$$
DELIMITER ;

-- Test insert employee into employee TABLE
INSERT INTO employee
VALUES(110, 'Kevin', 'Malone', '1978-02-19', 'M', 69000, 106, 3);

-- Trigger #3 named my_trigger2
DELIMITER $$
CREATE
    TRIGGER my_trigger2 BEFORE INSERT
    ON employee
    FOR EACH ROW BEGIN
         IF NEW.sex = 'M' THEN
               INSERT INTO trigger_test VALUES('added male employee');
         ELSEIF NEW.sex = 'F' THEN
               INSERT INTO trigger_test VALUES('added female');
         ELSE
               INSERT INTO trigger_test VALUES('added other employee');
         END IF;
    END$$
DELIMITER ;

-- Test insert employee into employee table
INSERT INTO employee
VALUES(111, 'Pam', 'Beesly', '1988-02-19', 'F', 69000, 106, 3);

SELECT * 
FROM trigger_test;

DROP TRIGGER my_trigger2; -- Drop trigger

SHOW TRIGGERS; -- Show all the trigger in the database